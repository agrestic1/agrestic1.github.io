<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://agrestic1.github.io/</id><title>Agrestic Doku</title><subtitle>A Doc site for my homelab</subtitle> <updated>2023-01-04T17:43:16+01:00</updated> <author> <name>agrestic</name> <uri>https://agrestic1.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://agrestic1.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://agrestic1.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2023 agrestic </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>JTL WaWi</title><link href="https://agrestic1.github.io/posts/JTL-Wawi/" rel="alternate" type="text/html" title="JTL WaWi" /><published>2022-07-21T00:00:00+02:00</published> <updated>2022-07-21T00:00:00+02:00</updated> <id>https://agrestic1.github.io/posts/JTL-Wawi/</id> <content src="https://agrestic1.github.io/posts/JTL-Wawi/" /> <author> <name>agrestic</name> </author> <category term="JTL" /> <summary> JTL WaWi Installation MSSQL 2017 Server @ Synology Auf der Synology einen Ordner /volume1/docker/mssql/data anlegen Dann Docker Container starten mit: version: "3.4" services: mssql: container_name: mssql image: mcr.microsoft.com/mssql/server:2017-latest restart: unless-stopped network_mode: bridge ports: - 1433:1433 environment: # - TZ=Europe/Berlin ... </summary> </entry> <entry><title>WireHole</title><link href="https://agrestic1.github.io/posts/wirehole/" rel="alternate" type="text/html" title="WireHole" /><published>2022-07-01T00:00:00+02:00</published> <updated>2022-07-01T00:00:00+02:00</updated> <id>https://agrestic1.github.io/posts/wirehole/</id> <content src="https://agrestic1.github.io/posts/wirehole/" /> <author> <name>agrestic</name> </author> <category term="documentation" /> <summary> PiHole und Wireguard Quelle: https://notes.iopush.net/blog/2020/wireguard-and-pi-hole-in-docker/ Wir setzen einen Wireguard server auf. Im selben Docker Nezwerk befindet sich auch ein PiHole Container, den wir als DNS-Server für die clienten definieren. Portainer stack mit Inhalt: version: "3.5" services: wireguard: image: linuxserver/wireguard depends_on: - pihole dns:... </summary> </entry> <entry><title>Git-Fu</title><link href="https://agrestic1.github.io/posts/git/" rel="alternate" type="text/html" title="Git-Fu" /><published>2022-06-24T00:00:00+02:00</published> <updated>2023-01-04T17:42:51+01:00</updated> <id>https://agrestic1.github.io/posts/git/</id> <content src="https://agrestic1.github.io/posts/git/" /> <author> <name>agrestic</name> </author> <category term="documentation" /> <summary> Git-fu Configuration: git config --global user.name "Your name here" git config --global user.email "your_email@example.com" I also do: git config --global color.ui true git config --global core.editor emacs The first of these will enable colored output in the terminal; the second tells git that you want to use emacs. Look to see if you have files ~/.ssh/id_rsa and ~/.ssh/id_rsa.pub. If ... </summary> </entry> <entry><title>Traefik loadbalancer with crowdsec Open Source &amp; Collaborative Security</title><link href="https://agrestic1.github.io/posts/traefik/" rel="alternate" type="text/html" title="Traefik loadbalancer with crowdsec Open Source &amp; Collaborative Security" /><published>2022-06-07T11:00:00+02:00</published> <updated>2022-12-30T23:31:51+01:00</updated> <id>https://agrestic1.github.io/posts/traefik/</id> <content src="https://agrestic1.github.io/posts/traefik/" /> <author> <name>agrestic</name> </author> <category term="traefik" /> <summary> We’re going to use SSL for everything. No more self-sign certs. No more http. No more hosting things on odd ports. We’re going all in with SSL for our external services. We going to set up a reverse proxy using Traefik, Portainer, and use that to get certificates from Let’s Encrypt. Quellen Techno Tim traefik Youtube Techno Tim traefik doku The digital life traefik youtube The digital ... </summary> </entry> <entry><title>Docker</title><link href="https://agrestic1.github.io/posts/docker/" rel="alternate" type="text/html" title="Docker" /><published>2022-06-07T11:00:00+02:00</published> <updated>2022-06-08T14:37:42+02:00</updated> <id>https://agrestic1.github.io/posts/docker/</id> <content src="https://agrestic1.github.io/posts/docker/" /> <author> <name>agrestic</name> </author> <category term="homelab" /> <summary> Docker Installation Install docker: First update sudo apt update &amp;amp;&amp;amp; sudo apt upgrade A) docker.io docker.io does it the Debian (or Ubuntu) way: Each external dependency is a separate package that can and will be updated independently. sudo apt install docker.io B) docker-ce docker-ce does it the Golang way: All dependencies are pulled into the source tree before the build and the ... </summary> </entry> </feed>
